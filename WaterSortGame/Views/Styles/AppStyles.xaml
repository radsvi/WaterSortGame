<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="BackgroundStyle" TargetType="Border">
        <Setter Property="Background"
            Value="#304674" />

        <Setter Property="CornerRadius"
            Value="20" />
        <Setter Property="Border.Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="20"
                              ShadowDepth="2"
                              Direction="-90"
                              Color="Black"
                              Opacity="0.3" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="DefaultButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="BorderBrush" Value="#b2cbde" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Background" Value="#98bad5" />
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="6" />
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="Button" x:Key="CloseButton" BasedOn="{StaticResource DefaultButton}">
        <Setter Property="BorderBrush" Value="White" />
        
        
        <Setter Property="Width" Value="100" />
        <Setter Property="Margin" Value="7,0,0,0" />
        <Setter Property="Background" Value="#E81123" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Width" Value="35" />


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#F1707A"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--<ControlTemplate TargetType="Button" x:Key="CloseButton2">
        <TextBlock Text="×" FontSize="25" Margin="0,-9,0,0"/>
    </ControlTemplate>-->
    <Style TargetType="StackPanel" x:Key="DefaultStackPanel">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>
    <Style TargetType="StackPanel" x:Key="NavigationButtonsPrimary" BasedOn="{StaticResource DefaultStackPanel}">
        <Style.Resources>
            <Style TargetType="Button" BasedOn="{StaticResource DefaultButton}">
                <Setter Property="Width" Value="100" />
                <Setter Property="Margin" Value="7,0,0,0" />
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource DefaultButton}" x:Key="ConfirmDeleteButton">
        <Setter Property="Width" Value="100" />
        <Setter Property="Margin" Value="7,0,0,0" />
        <Setter Property="Background" Value="OrangeRed" />
        <Setter Property="BorderBrush" Value="PaleVioletRed" />
        <Setter Property="Foreground" Value="White" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#f4f4f4" />
                <Setter Property="Foreground" Value="#838383" />
                <Setter Property="BorderBrush" Value="#adb2b5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">

            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="StackPanel" x:Key="NavigationButtonsSecondary" BasedOn="{StaticResource DefaultStackPanel}">
        <Setter Property="Height" Value="18" />
        <Style.Resources>
            <Style TargetType="Button" BasedOn="{StaticResource DefaultButton}">
                <Setter Property="Width" Value="80" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="Margin" Value="7,0,0,0" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="StackPanel" x:Key="NavigationButtonsDeveloper" BasedOn="{StaticResource DefaultStackPanel}">
        <Setter Property="Height" Value="18" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Style.Resources>
            <Style TargetType="Button" BasedOn="{StaticResource DefaultButton}">
                <Setter Property="Width" Value="80" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="Margin" Value="7,0,0,0" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="Border" x:Key="Separator">
        <Setter Property="BorderThickness" Value="0,1,0,1" />
        <Setter Property="BorderBrush" Value="#b2cbde" />
        <Setter Property="Margin" Value="0 4 0 0" />
    </Style>

    <!--// Level Complete Window //-->
    <Style TargetType="Grid" x:Key="PopupScreenOuter">
        <Setter Property="Background" Value="#CC000000" />
    </Style>
    <Style TargetType="Border" x:Key="PopupScreen">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#b2cbde" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Width" Value="380" />
        <Setter Property="Height" Value="180" />
        <!--<Setter Property="Margin" Value="10" />-->
    </Style>
    <Style TargetType="GroupBox">
        <Setter Property="Padding" Value="0,10,0,0" />
        <Setter Property="Margin" Value="0,0,0,5" />
        <Style.Resources>
            <Style TargetType="DockPanel">
                <Setter Property="Margin" Value="0,0,0,5" />
            </Style>
        </Style.Resources>
    </Style>
    <!--<Style TargetType="Grid" x:Key="NotificationScreenOuter">
        <Setter Property="Background" Value="Transparent" />
    </Style>-->
    <Style TargetType="Button" x:Key="ClickBackgroundButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">

            </Trigger>
            <Trigger Property="IsPressed" Value="True">

            </Trigger>
        </Style.Triggers>

        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="#b2cbde" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Background" Value="White" />
            </Style>
            <Style TargetType="TextBlock" >
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="Button" x:Key="PopupTopRightCloseButton">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="29" />
        <Setter Property="Content" Value="×" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />
        <!--<Setter Property="Margin" Value="0,1,1,0" />-->
        <Setter Property="Padding" Value="0,-3,0,0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="Background" Value="#F5898E"/>-->
                <!--<Setter Property="Background" Value="White" />-->
                
                <Setter Property="Background" Value="#E81123" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#F1707A"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--// Quick Notification popup window //-->
    <Style TargetType="Grid" x:Key="QuickNotificationPopupScreen">
        <!--<Setter Property="Width" Value="380" />-->

        
    </Style>
    <Style TargetType="Button" x:Key="ClickBackgroundButtonQuickNotification" BasedOn="{StaticResource ClickBackgroundButton}">
        <Setter Property="Background" Value="LightGreen" />
        <Setter Property="FontSize" Value="13" />
    </Style>
</ResourceDictionary>